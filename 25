def func1(arg1, arg2):
    def func2(arg3, arg4):
        var8 = func3(arg4, arg1)
        var9 = arg1 | var8
        if arg2 < var8:
            var10 = -959 | -709 | (arg4 ^ -858)
        else:
            var10 = arg1 ^ arg3 - 485 | var8
        var11 = arg3 | 319789473
        var12 = -1289293691 - -1213173129 + 779 + arg2
        var13 = (var12 | (264 ^ var8)) + var11
        var14 = (var9 + arg4) + arg1 | arg1
        var15 = var12 ^ 330
        var16 = (arg1 + var15 ^ 723) - var11
        var17 = arg2 & var8 | var12 - 583928357
        if var8 < var8:
            var18 = ((var16 & var8) | var16) + var11
        else:
            var18 = var11 + (-2022007338 - var11) ^ arg1
        var19 = (711 + var9 ^ var14) - var9
        var20 = (var17 - 390679912) - -61731290 - var8
        var21 = var11 + var13
        var22 = var21 & arg1
        var23 = var20 ^ var11
        var24 = arg1 - ((var14 ^ var21) - var21)
        var25 = var14 & var8 - var16 & var24
        var26 = arg1 ^ var9 + var14 - var9
        var27 = var24 + ((var13 + -105392351) ^ var21)
        var28 = var24 + (arg2 - (var22 + var23))
        var29 = var24 - (var9 ^ var28 & var24)
        var30 = (var8 | (var24 - var27)) | var16
        var31 = var29 + -72887192
        var32 = 251140082 | var30
        result = var32 - (var11 & var25 - var21)
        return result
    var33 = func2(arg2, arg1)
    var36 = class5()
    for var37 in range(50):
        var38 = var36.func6
        var38(var33, arg1)
    var59 = func7(arg1, arg2)
    var63 = func8(var59, var33)
    var64 = 1805659187 + var33
    var65 = (788 & var63) & (-1099390222 + var63) | arg1
    var66 = (var65 | arg1 & arg2) ^ var65 - -1775292997
    var67 = var59 ^ var65
    var68 = var64 | 575
    result = arg2 ^ var66 | 728 + var33
    return result
def func7(arg39, arg40):
    var41 = ((arg39 | -651395050) + -701) ^ arg39
    var42 = arg40 | var41 | -1322951250 ^ 1775570676
    var43 = 626 ^ arg39 & -1316538948 ^ 1072713998
    var44 = 2120782260 & arg40
    var45 = (var42 - (991 ^ var43)) + var44
    var46 = var41 & arg40 + var41
    var47 = (var42 | arg39) ^ -1104607224
    if var45 < var44:
        var48 = var47 ^ (var46 ^ 1306657941 ^ var45)
    else:
        var48 = arg40 | arg40 - var43 - var43
    var49 = ((arg40 ^ var46) | var45) & arg39
    var50 = arg39 ^ var46 - arg40 ^ -628
    if var49 < var49:
        var51 = var46 - var43
    else:
        var51 = (var45 & arg40 - var43) ^ var41
    var52 = (arg39 | (var47 | var43)) ^ var49
    var53 = -214 - var52 - var50
    var54 = arg39 & var43
    if var41 < var42:
        var55 = 759694679 | ((-1376511922 | arg39) - var42)
    else:
        var55 = var42 + (var43 + var41 | var41)
    var56 = var52 - var47
    var57 = arg39 - var49
    var58 = (var54 & var43 - var56) ^ var57
    result = (var43 + (arg40 | var57)) & var43
    return result
class class5(object):
    def func6(self, arg34, arg35):
        result = -691378692 - arg35 | 0 + 533071199 | -2041605770 & arg35 - arg34
        return result
def func3(arg5, arg6):
    closure = [0]
    def func4(acc, rest):
        var7 = 6 | acc
        closure[0] += var7
        if acc == 0:
            return var7
        else:
            result = func4(acc - 1, var7)
            return result
    result = func4(10, 0)
    return result
def func8(arg60, arg61):
    closure = [0]
    def func9(acc, rest):
        var62 = closure[0] | 0
        closure[0] += var62
        if acc == 0:
            return var62
        else:
            result = func9(acc - 1, var62)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var8 = func3(arg4, arg1)
        var9 = arg1 | var8
        if arg2 < var8:
            var10 = -959 | -709 | (arg4 ^ -858)
        else:
            var10 = arg1 ^ arg3 - 485 | var8
        var11 = arg3 | 319789473
        var12 = -1289293691 - -1213173129 + 779 + arg2
        var13 = (var12 | (264 ^ var8)) + var11
        var14 = (var9 + arg4) + arg1 | arg1
        var15 = var12 ^ 330
        var16 = (arg1 + var15 ^ 723) - var11
        var17 = arg2 & var8 | var12 - 583928357
        if var8 < var8:
            var18 = ((var16 & var8) | var16) + var11
        else:
            var18 = var11 + (-2022007338 - var11) ^ arg1
        var19 = (711 + var9 ^ var14) - var9
        var20 = (var17 - 390679912) - -61731290 - var8
        var21 = var11 + var13
        var22 = var21 & arg1
        var23 = var20 ^ var11
        var24 = arg1 - ((var14 ^ var21) - var21)
        var25 = var14 & var8 - var16 & var24
        var26 = arg1 ^ var9 + var14 - var9
        var27 = var24 + ((var13 + -105392351) ^ var21)
        var28 = var24 + (arg2 - (var22 + var23))
        var29 = var24 - (var9 ^ var28 & var24)
        var30 = (var8 | (var24 - var27)) | var16
        var31 = var29 + -72887192
        var32 = 251140082 | var30
        result = var32 - (var11 & var25 - var21)
        return result
    var33 = func2(arg2, arg1)
    var36 = class5()
    for var37 in range(50):
        var38 = var36.func6
        var38(var33, arg1)
    var59 = func7(arg1, arg2)
    var63 = func8(var59, var33)
    var64 = 1805659187 + var33
    var65 = (788 & var63) & (-1099390222 + var63) | arg1
    var66 = (var65 | arg1 & arg2) ^ var65 - -1775292997
    var67 = var59 ^ var65
    var68 = var64 | 575
    result = arg2 ^ var66 | 728 + var33
    return result
def func7(arg39, arg40):
    var41 = ((arg39 | -651395050) + -701) ^ arg39
    var42 = arg40 | var41 | -1322951250 ^ 1775570676
    var43 = 626 ^ arg39 & -1316538948 ^ 1072713998
    var44 = 2120782260 & arg40
    var45 = (var42 - (991 ^ var43)) + var44
    var46 = var41 & arg40 + var41
    var47 = (var42 | arg39) ^ -1104607224
    if var45 < var44:
        var48 = var47 ^ (var46 ^ 1306657941 ^ var45)
    else:
        var48 = arg40 | arg40 - var43 - var43
    var49 = ((arg40 ^ var46) | var45) & arg39
    var50 = arg39 ^ var46 - arg40 ^ -628
    if var49 < var49:
        var51 = var46 - var43
    else:
        var51 = (var45 & arg40 - var43) ^ var41
    var52 = (arg39 | (var47 | var43)) ^ var49
    var53 = -214 - var52 - var50
    var54 = arg39 & var43
    if var41 < var42:
        var55 = 759694679 | ((-1376511922 | arg39) - var42)
    else:
        var55 = var42 + (var43 + var41 | var41)
    var56 = var52 - var47
    var57 = arg39 - var49
    var58 = (var54 & var43 - var56) ^ var57
    result = (var43 + (arg40 | var57)) & var43
    return result
class class5(object):
    def func6(self, arg34, arg35):
        result = -691378692 - arg35 | 0 + 533071199 | -2041605770 & arg35 - arg34
        return result
def func3(arg5, arg6):
    closure = [0]
    def func4(acc, rest):
        var7 = 6 | acc
        closure[0] += var7
        if acc == 0:
            return var7
        else:
            result = func4(acc - 1, var7)
            return result
    result = func4(10, 0)
    return result
def func8(arg60, arg61):
    closure = [0]
    def func9(acc, rest):
        var62 = closure[0] | 0
        closure[0] += var62
        if acc == 0:
            return var62
        else:
            result = func9(acc - 1, var62)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var8 = func3(arg4, arg1)
        var9 = arg1 | var8
        if arg2 < var8:
            var10 = -959 | -709 | (arg4 ^ -858)
        else:
            var10 = arg1 ^ arg3 - 485 | var8
        var11 = arg3 | 319789473
        var12 = -1289293691 - -1213173129 + 779 + arg2
        var13 = (var12 | (264 ^ var8)) + var11
        var14 = (var9 + arg4) + arg1 | arg1
        var15 = var12 ^ 330
        var16 = (arg1 + var15 ^ 723) - var11
        var17 = arg2 & var8 | var12 - 583928357
        if var8 < var8:
            var18 = ((var16 & var8) | var16) + var11
        else:
            var18 = var11 + (-2022007338 - var11) ^ arg1
        var19 = (711 + var9 ^ var14) - var9
        var20 = (var17 - 390679912) - -61731290 - var8
        var21 = var11 + var13
        var22 = var21 & arg1
        var23 = var20 ^ var11
        var24 = arg1 - ((var14 ^ var21) - var21)
        var25 = var14 & var8 - var16 & var24
        var26 = arg1 ^ var9 + var14 - var9
        var27 = var24 + ((var13 + -105392351) ^ var21)
        var28 = var24 + (arg2 - (var22 + var23))
        var29 = var24 - (var9 ^ var28 & var24)
        var30 = (var8 | (var24 - var27)) | var16
        var31 = var29 + -72887192
        var32 = 251140082 | var30
        result = var32 - (var11 & var25 - var21)
        return result
    var33 = func2(arg2, arg1)
    var36 = class5()
    for var37 in range(50):
        var38 = var36.func6
        var38(var33, arg1)
    var59 = func7(arg1, arg2)
    var63 = func8(var59, var33)
    var64 = 1805659187 + var33
    var65 = (788 & var63) & (-1099390222 + var63) | arg1
    var66 = (var65 | arg1 & arg2) ^ var65 - -1775292997
    var67 = var59 ^ var65
    var68 = var64 | 575
    result = arg2 ^ var66 | 728 + var33
    return result
def func7(arg39, arg40):
    var41 = ((arg39 | -651395050) + -701) ^ arg39
    var42 = arg40 | var41 | -1322951250 ^ 1775570676
    var43 = 626 ^ arg39 & -1316538948 ^ 1072713998
    var44 = 2120782260 & arg40
    var45 = (var42 - (991 ^ var43)) + var44
    var46 = var41 & arg40 + var41
    var47 = (var42 | arg39) ^ -1104607224
    if var45 < var44:
        var48 = var47 ^ (var46 ^ 1306657941 ^ var45)
    else:
        var48 = arg40 | arg40 - var43 - var43
    var49 = ((arg40 ^ var46) | var45) & arg39
    var50 = arg39 ^ var46 - arg40 ^ -628
    if var49 < var49:
        var51 = var46 - var43
    else:
        var51 = (var45 & arg40 - var43) ^ var41
    var52 = (arg39 | (var47 | var43)) ^ var49
    var53 = -214 - var52 - var50
    var54 = arg39 & var43
    if var41 < var42:
        var55 = 759694679 | ((-1376511922 | arg39) - var42)
    else:
        var55 = var42 + (var43 + var41 | var41)
    var56 = var52 - var47
    var57 = arg39 - var49
    var58 = (var54 & var43 - var56) ^ var57
    result = (var43 + (arg40 | var57)) & var43
    return result
class class5(object):
    def func6(self, arg34, arg35):
        result = -691378692 - arg35 | 0 + 533071199 | -2041605770 & arg35 - arg34
        return result
def func3(arg5, arg6):
    closure = [0]
    def func4(acc, rest):
        var7 = 6 | acc
        closure[0] += var7
        if acc == 0:
            return var7
        else:
            result = func4(acc - 1, var7)
            return result
    result = func4(10, 0)
    return result
def func8(arg60, arg61):
    closure = [0]
    def func9(acc, rest):
        var62 = closure[0] | 0
        closure[0] += var62
        if acc == 0:
            return var62
        else:
            result = func9(acc - 1, var62)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var8 = func3(arg4, arg1)
        var9 = arg1 | var8
        if arg2 < var8:
            var10 = -959 | -709 | (arg4 ^ -858)
        else:
            var10 = arg1 ^ arg3 - 485 | var8
        var11 = arg3 | 319789473
        var12 = -1289293691 - -1213173129 + 779 + arg2
        var13 = (var12 | (264 ^ var8)) + var11
        var14 = (var9 + arg4) + arg1 | arg1
        var15 = var12 ^ 330
        var16 = (arg1 + var15 ^ 723) - var11
        var17 = arg2 & var8 | var12 - 583928357
        if var8 < var8:
            var18 = ((var16 & var8) | var16) + var11
        else:
            var18 = var11 + (-2022007338 - var11) ^ arg1
        var19 = (711 + var9 ^ var14) - var9
        var20 = (var17 - 390679912) - -61731290 - var8
        var21 = var11 + var13
        var22 = var21 & arg1
        var23 = var20 ^ var11
        var24 = arg1 - ((var14 ^ var21) - var21)
        var25 = var14 & var8 - var16 & var24
        var26 = arg1 ^ var9 + var14 - var9
        var27 = var24 + ((var13 + -105392351) ^ var21)
        var28 = var24 + (arg2 - (var22 + var23))
        var29 = var24 - (var9 ^ var28 & var24)
        var30 = (var8 | (var24 - var27)) | var16
        var31 = var29 + -72887192
        var32 = 251140082 | var30
        result = var32 - (var11 & var25 - var21)
        return result
    var33 = func2(arg2, arg1)
    var36 = class5()
    for var37 in range(50):
        var38 = var36.func6
        var38(var33, arg1)
    var59 = func7(arg1, arg2)
    var63 = func8(var59, var33)
    var64 = 1805659187 + var33
    var65 = (788 & var63) & (-1099390222 + var63) | arg1
    var66 = (var65 | arg1 & arg2) ^ var65 - -1775292997
    var67 = var59 ^ var65
    var68 = var64 | 575
    result = arg2 ^ var66 | 728 + var33
    return result
def func7(arg39, arg40):
    var41 = ((arg39 | -651395050) + -701) ^ arg39
    var42 = arg40 | var41 | -1322951250 ^ 1775570676
    var43 = 626 ^ arg39 & -1316538948 ^ 1072713998
    var44 = 2120782260 & arg40
    var45 = (var42 - (991 ^ var43)) + var44
    var46 = var41 & arg40 + var41
    var47 = (var42 | arg39) ^ -1104607224
    if var45 < var44:
        var48 = var47 ^ (var46 ^ 1306657941 ^ var45)
    else:
        var48 = arg40 | arg40 - var43 - var43
    var49 = ((arg40 ^ var46) | var45) & arg39
    var50 = arg39 ^ var46 - arg40 ^ -628
    if var49 < var49:
        var51 = var46 - var43
    else:
        var51 = (var45 & arg40 - var43) ^ var41
    var52 = (arg39 | (var47 | var43)) ^ var49
    var53 = -214 - var52 - var50
    var54 = arg39 & var43
    if var41 < var42:
        var55 = 759694679 | ((-1376511922 | arg39) - var42)
    else:
        var55 = var42 + (var43 + var41 | var41)
    var56 = var52 - var47
    var57 = arg39 - var49
    var58 = (var54 & var43 - var56) ^ var57
    result = (var43 + (arg40 | var57)) & var43
    return result
class class5(object):
    def func6(self, arg34, arg35):
        result = -691378692 - arg35 | 0 + 533071199 | -2041605770 & arg35 - arg34
        return result
def func3(arg5, arg6):
    closure = [0]
    def func4(acc, rest):
        var7 = 6 | acc
        closure[0] += var7
        if acc == 0:
            return var7
        else:
            result = func4(acc - 1, var7)
            return result
    result = func4(10, 0)
    return result
def func8(arg60, arg61):
    closure = [0]
    def func9(acc, rest):
        var62 = closure[0] | 0
        closure[0] += var62
        if acc == 0:
            return var62
        else:
            result = func9(acc - 1, var62)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var8 = func3(arg4, arg1)
        var9 = arg1 | var8
        if arg2 < var8:
            var10 = -959 | -709 | (arg4 ^ -858)
        else:
            var10 = arg1 ^ arg3 - 485 | var8
        var11 = arg3 | 319789473
        var12 = -1289293691 - -1213173129 + 779 + arg2
        var13 = (var12 | (264 ^ var8)) + var11
        var14 = (var9 + arg4) + arg1 | arg1
        var15 = var12 ^ 330
        var16 = (arg1 + var15 ^ 723) - var11
        var17 = arg2 & var8 | var12 - 583928357
        if var8 < var8:
            var18 = ((var16 & var8) | var16) + var11
        else:
            var18 = var11 + (-2022007338 - var11) ^ arg1
        var19 = (711 + var9 ^ var14) - var9
        var20 = (var17 - 390679912) - -61731290 - var8
        var21 = var11 + var13
        var22 = var21 & arg1
        var23 = var20 ^ var11
        var24 = arg1 - ((var14 ^ var21) - var21)
        var25 = var14 & var8 - var16 & var24
        var26 = arg1 ^ var9 + var14 - var9
        var27 = var24 + ((var13 + -105392351) ^ var21)
        var28 = var24 + (arg2 - (var22 + var23))
        var29 = var24 - (var9 ^ var28 & var24)
        var30 = (var8 | (var24 - var27)) | var16
        var31 = var29 + -72887192
        var32 = 251140082 | var30
        result = var32 - (var11 & var25 - var21)
        return result
    var33 = func2(arg2, arg1)
    var36 = class5()
    for var37 in range(50):
        var38 = var36.func6
        var38(var33, arg1)
    var59 = func7(arg1, arg2)
    var63 = func8(var59, var33)
    var64 = 1805659187 + var33
    var65 = (788 & var63) & (-1099390222 + var63) | arg1
    var66 = (var65 | arg1 & arg2) ^ var65 - -1775292997
    var67 = var59 ^ var65
    var68 = var64 | 575
    result = arg2 ^ var66 | 728 + var33
    return result
def func7(arg39, arg40):
    var41 = ((arg39 | -651395050) + -701) ^ arg39
    var42 = arg40 | var41 | -1322951250 ^ 1775570676
    var43 = 626 ^ arg39 & -1316538948 ^ 1072713998
    var44 = 2120782260 & arg40
    var45 = (var42 - (991 ^ var43)) + var44
    var46 = var41 & arg40 + var41
    var47 = (var42 | arg39) ^ -1104607224
    if var45 < var44:
        var48 = var47 ^ (var46 ^ 1306657941 ^ var45)
    else:
        var48 = arg40 | arg40 - var43 - var43
    var49 = ((arg40 ^ var46) | var45) & arg39
    var50 = arg39 ^ var46 - arg40 ^ -628
    if var49 < var49:
        var51 = var46 - var43
    else:
        var51 = (var45 & arg40 - var43) ^ var41
    var52 = (arg39 | (var47 | var43)) ^ var49
    var53 = -214 - var52 - var50
    var54 = arg39 & var43
    if var41 < var42:
        var55 = 759694679 | ((-1376511922 | arg39) - var42)
    else:
        var55 = var42 + (var43 + var41 | var41)
    var56 = var52 - var47
    var57 = arg39 - var49
    var58 = (var54 & var43 - var56) ^ var57
    result = (var43 + (arg40 | var57)) & var43
    return result
class class5(object):
    def func6(self, arg34, arg35):
        result = -691378692 - arg35 | 0 + 533071199 | -2041605770 & arg35 - arg34
        return result
def func3(arg5, arg6):
    closure = [0]
    def func4(acc, rest):
        var7 = 6 | acc
        closure[0] += var7
        if acc == 0:
            return var7
        else:
            result = func4(acc - 1, var7)
            return result
    result = func4(10, 0)
    return result
def func8(arg60, arg61):
    closure = [0]
    def func9(acc, rest):
        var62 = closure[0] | 0
        closure[0] += var62
        if acc == 0:
            return var62
        else:
            result = func9(acc - 1, var62)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var8 = func3(arg4, arg1)
        var9 = arg1 | var8
        if arg2 < var8:
            var10 = -959 | -709 | (arg4 ^ -858)
        else:
            var10 = arg1 ^ arg3 - 485 | var8
        var11 = arg3 | 319789473
        var12 = -1289293691 - -1213173129 + 779 + arg2
        var13 = (var12 | (264 ^ var8)) + var11
        var14 = (var9 + arg4) + arg1 | arg1
        var15 = var12 ^ 330
        var16 = (arg1 + var15 ^ 723) - var11
        var17 = arg2 & var8 | var12 - 583928357
        if var8 < var8:
            var18 = ((var16 & var8) | var16) + var11
        else:
            var18 = var11 + (-2022007338 - var11) ^ arg1
        var19 = (711 + var9 ^ var14) - var9
        var20 = (var17 - 390679912) - -61731290 - var8
        var21 = var11 + var13
        var22 = var21 & arg1
        var23 = var20 ^ var11
        var24 = arg1 - ((var14 ^ var21) - var21)
        var25 = var14 & var8 - var16 & var24
        var26 = arg1 ^ var9 + var14 - var9
        var27 = var24 + ((var13 + -105392351) ^ var21)
        var28 = var24 + (arg2 - (var22 + var23))
        var29 = var24 - (var9 ^ var28 & var24)
        var30 = (var8 | (var24 - var27)) | var16
        var31 = var29 + -72887192
        var32 = 251140082 | var30
        result = var32 - (var11 & var25 - var21)
        return result
    var33 = func2(arg2, arg1)
    var36 = class5()
    for var37 in range(50):
        var38 = var36.func6
        var38(var33, arg1)
    var59 = func7(arg1, arg2)
    var63 = func8(var59, var33)
    var64 = 1805659187 + var33
    var65 = (788 & var63) & (-1099390222 + var63) | arg1
    var66 = (var65 | arg1 & arg2) ^ var65 - -1775292997
    var67 = var59 ^ var65
    var68 = var64 | 575
    result = arg2 ^ var66 | 728 + var33
    return result
def func7(arg39, arg40):
    var41 = ((arg39 | -651395050) + -701) ^ arg39
    var42 = arg40 | var41 | -1322951250 ^ 1775570676
    var43 = 626 ^ arg39 & -1316538948 ^ 1072713998
    var44 = 2120782260 & arg40
    var45 = (var42 - (991 ^ var43)) + var44
    var46 = var41 & arg40 + var41
    var47 = (var42 | arg39) ^ -1104607224
    if var45 < var44:
        var48 = var47 ^ (var46 ^ 1306657941 ^ var45)
    else:
        var48 = arg40 | arg40 - var43 - var43
    var49 = ((arg40 ^ var46) | var45) & arg39
    var50 = arg39 ^ var46 - arg40 ^ -628
    if var49 < var49:
        var51 = var46 - var43
    else:
        var51 = (var45 & arg40 - var43) ^ var41
    var52 = (arg39 | (var47 | var43)) ^ var49
    var53 = -214 - var52 - var50
    var54 = arg39 & var43
    if var41 < var42:
        var55 = 759694679 | ((-1376511922 | arg39) - var42)
    else:
        var55 = var42 + (var43 + var41 | var41)
    var56 = var52 - var47
    var57 = arg39 - var49
    var58 = (var54 & var43 - var56) ^ var57
    result = (var43 + (arg40 | var57)) & var43
    return result
class class5(object):
    def func6(self, arg34, arg35):
        result = -691378692 - arg35 | 0 + 533071199 | -2041605770 & arg35 - arg34
        return result
def func3(arg5, arg6):
    closure = [0]
    def func4(acc, rest):
        var7 = 6 | acc
        closure[0] += var7
        if acc == 0:
            return var7
        else:
            result = func4(acc - 1, var7)
            return result
    result = func4(10, 0)
    return result
def func8(arg60, arg61):
    closure = [0]
    def func9(acc, rest):
        var62 = closure[0] | 0
        closure[0] += var62
        if acc == 0:
            return var62
        else:
            result = func9(acc - 1, var62)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var8 = func3(arg4, arg1)
        var9 = arg1 | var8
        if arg2 < var8:
            var10 = -959 | -709 | (arg4 ^ -858)
        else:
            var10 = arg1 ^ arg3 - 485 | var8
        var11 = arg3 | 319789473
        var12 = -1289293691 - -1213173129 + 779 + arg2
        var13 = (var12 | (264 ^ var8)) + var11
        var14 = (var9 + arg4) + arg1 | arg1
        var15 = var12 ^ 330
        var16 = (arg1 + var15 ^ 723) - var11
        var17 = arg2 & var8 | var12 - 583928357
        if var8 < var8:
            var18 = ((var16 & var8) | var16) + var11
        else:
            var18 = var11 + (-2022007338 - var11) ^ arg1
        var19 = (711 + var9 ^ var14) - var9
        var20 = (var17 - 390679912) - -61731290 - var8
        var21 = var11 + var13
        var22 = var21 & arg1
        var23 = var20 ^ var11
        var24 = arg1 - ((var14 ^ var21) - var21)
        var25 = var14 & var8 - var16 & var24
        var26 = arg1 ^ var9 + var14 - var9
        var27 = var24 + ((var13 + -105392351) ^ var21)
        var28 = var24 + (arg2 - (var22 + var23))
        var29 = var24 - (var9 ^ var28 & var24)
        var30 = (var8 | (var24 - var27)) | var16
        var31 = var29 + -72887192
        var32 = 251140082 | var30
        result = var32 - (var11 & var25 - var21)
        return result
    var33 = func2(arg2, arg1)
    var36 = class5()
    for var37 in range(50):
        var38 = var36.func6
        var38(var33, arg1)
    var59 = func7(arg1, arg2)
    var63 = func8(var59, var33)
    var64 = 1805659187 + var33
    var65 = (788 & var63) & (-1099390222 + var63) | arg1
    var66 = (var65 | arg1 & arg2) ^ var65 - -1775292997
    var67 = var59 ^ var65
    var68 = var64 | 575
    result = arg2 ^ var66 | 728 + var33
    return result
def func7(arg39, arg40):
    var41 = ((arg39 | -651395050) + -701) ^ arg39
    var42 = arg40 | var41 | -1322951250 ^ 1775570676
    var43 = 626 ^ arg39 & -1316538948 ^ 1072713998
    var44 = 2120782260 & arg40
    var45 = (var42 - (991 ^ var43)) + var44
    var46 = var41 & arg40 + var41
    var47 = (var42 | arg39) ^ -1104607224
    if var45 < var44:
        var48 = var47 ^ (var46 ^ 1306657941 ^ var45)
    else:
        var48 = arg40 | arg40 - var43 - var43
    var49 = ((arg40 ^ var46) | var45) & arg39
    var50 = arg39 ^ var46 - arg40 ^ -628
    if var49 < var49:
        var51 = var46 - var43
    else:
        var51 = (var45 & arg40 - var43) ^ var41
    var52 = (arg39 | (var47 | var43)) ^ var49
    var53 = -214 - var52 - var50
    var54 = arg39 & var43
    if var41 < var42:
        var55 = 759694679 | ((-1376511922 | arg39) - var42)
    else:
        var55 = var42 + (var43 + var41 | var41)
    var56 = var52 - var47
    var57 = arg39 - var49
    var58 = (var54 & var43 - var56) ^ var57
    result = (var43 + (arg40 | var57)) & var43
    return result
class class5(object):
    def func6(self, arg34, arg35):
        result = -691378692 - arg35 | 0 + 533071199 | -2041605770 & arg35 - arg34
        return result
def func3(arg5, arg6):
    closure = [0]
    def func4(acc, rest):
        var7 = 6 | acc
        closure[0] += var7
        if acc == 0:
            return var7
        else:
            result = func4(acc - 1, var7)
            return result
    result = func4(10, 0)
    return result
def func8(arg60, arg61):
    closure = [0]
    def func9(acc, rest):
        var62 = closure[0] | 0
        closure[0] += var62
        if acc == 0:
            return var62
        else:
            result = func9(acc - 1, var62)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var8 = func3(arg4, arg1)
        var9 = arg1 | var8
        if arg2 < var8:
            var10 = -959 | -709 | (arg4 ^ -858)
        else:
            var10 = arg1 ^ arg3 - 485 | var8
        var11 = arg3 | 319789473
        var12 = -1289293691 - -1213173129 + 779 + arg2
        var13 = (var12 | (264 ^ var8)) + var11
        var14 = (var9 + arg4) + arg1 | arg1
        var15 = var12 ^ 330
        var16 = (arg1 + var15 ^ 723) - var11
        var17 = arg2 & var8 | var12 - 583928357
        if var8 < var8:
            var18 = ((var16 & var8) | var16) + var11
        else:
            var18 = var11 + (-2022007338 - var11) ^ arg1
        var19 = (711 + var9 ^ var14) - var9
        var20 = (var17 - 390679912) - -61731290 - var8
        var21 = var11 + var13
        var22 = var21 & arg1
        var23 = var20 ^ var11
        var24 = arg1 - ((var14 ^ var21) - var21)
        var25 = var14 & var8 - var16 & var24
        var26 = arg1 ^ var9 + var14 - var9
        var27 = var24 + ((var13 + -105392351) ^ var21)
        var28 = var24 + (arg2 - (var22 + var23))
        var29 = var24 - (var9 ^ var28 & var24)
        var30 = (var8 | (var24 - var27)) | var16
        var31 = var29 + -72887192
        var32 = 251140082 | var30
        result = var32 - (var11 & var25 - var21)
        return result
    var33 = func2(arg2, arg1)
    var36 = class5()
    for var37 in range(50):
        var38 = var36.func6
        var38(var33, arg1)
    var59 = func7(arg1, arg2)
    var63 = func8(var59, var33)
    var64 = 1805659187 + var33
    var65 = (788 & var63) & (-1099390222 + var63) | arg1
    var66 = (var65 | arg1 & arg2) ^ var65 - -1775292997
    var67 = var59 ^ var65
    var68 = var64 | 575
    result = arg2 ^ var66 | 728 + var33
    return result
def func7(arg39, arg40):
    var41 = ((arg39 | -651395050) + -701) ^ arg39
    var42 = arg40 | var41 | -1322951250 ^ 1775570676
    var43 = 626 ^ arg39 & -1316538948 ^ 1072713998
    var44 = 2120782260 & arg40
    var45 = (var42 - (991 ^ var43)) + var44
    var46 = var41 & arg40 + var41
    var47 = (var42 | arg39) ^ -1104607224
    if var45 < var44:
        var48 = var47 ^ (var46 ^ 1306657941 ^ var45)
    else:
        var48 = arg40 | arg40 - var43 - var43
    var49 = ((arg40 ^ var46) | var45) & arg39
    var50 = arg39 ^ var46 - arg40 ^ -628
    if var49 < var49:
        var51 = var46 - var43
    else:
        var51 = (var45 & arg40 - var43) ^ var41
    var52 = (arg39 | (var47 | var43)) ^ var49
    var53 = -214 - var52 - var50
    var54 = arg39 & var43
    if var41 < var42:
        var55 = 759694679 | ((-1376511922 | arg39) - var42)
    else:
        var55 = var42 + (var43 + var41 | var41)
    var56 = var52 - var47
    var57 = arg39 - var49
    var58 = (var54 & var43 - var56) ^ var57
    result = (var43 + (arg40 | var57)) & var43
    return result
class class5(object):
    def func6(self, arg34, arg35):
        result = -691378692 - arg35 | 0 + 533071199 | -2041605770 & arg35 - arg34
        return result
def func3(arg5, arg6):
    closure = [0]
    def func4(acc, rest):
        var7 = 6 | acc
        closure[0] += var7
        if acc == 0:
            return var7
        else:
            result = func4(acc - 1, var7)
            return result
    result = func4(10, 0)
    return result
def func8(arg60, arg61):
    closure = [0]
    def func9(acc, rest):
        var62 = closure[0] | 0
        closure[0] += var62
        if acc == 0:
            return var62
        else:
            result = func9(acc - 1, var62)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var8 = func3(arg4, arg1)
        var9 = arg1 | var8
        if arg2 < var8:
            var10 = -959 | -709 | (arg4 ^ -858)
        else:
            var10 = arg1 ^ arg3 - 485 | var8
        var11 = arg3 | 319789473
        var12 = -1289293691 - -1213173129 + 779 + arg2
        var13 = (var12 | (264 ^ var8)) + var11
        var14 = (var9 + arg4) + arg1 | arg1
        var15 = var12 ^ 330
        var16 = (arg1 + var15 ^ 723) - var11
        var17 = arg2 & var8 | var12 - 583928357
        if var8 < var8:
            var18 = ((var16 & var8) | var16) + var11
        else:
            var18 = var11 + (-2022007338 - var11) ^ arg1
        var19 = (711 + var9 ^ var14) - var9
        var20 = (var17 - 390679912) - -61731290 - var8
        var21 = var11 + var13
        var22 = var21 & arg1
        var23 = var20 ^ var11
        var24 = arg1 - ((var14 ^ var21) - var21)
        var25 = var14 & var8 - var16 & var24
        var26 = arg1 ^ var9 + var14 - var9
        var27 = var24 + ((var13 + -105392351) ^ var21)
        var28 = var24 + (arg2 - (var22 + var23))
        var29 = var24 - (var9 ^ var28 & var24)
        var30 = (var8 | (var24 - var27)) | var16
        var31 = var29 + -72887192
        var32 = 251140082 | var30
        result = var32 - (var11 & var25 - var21)
        return result
    var33 = func2(arg2, arg1)
    var36 = class5()
    for var37 in range(50):
        var38 = var36.func6
        var38(var33, arg1)
    var59 = func7(arg1, arg2)
    var63 = func8(var59, var33)
    var64 = 1805659187 + var33
    var65 = (788 & var63) & (-1099390222 + var63) | arg1
    var66 = (var65 | arg1 & arg2) ^ var65 - -1775292997
    var67 = var59 ^ var65
    var68 = var64 | 575
    result = arg2 ^ var66 | 728 + var33
    return result
def func7(arg39, arg40):
    var41 = ((arg39 | -651395050) + -701) ^ arg39
    var42 = arg40 | var41 | -1322951250 ^ 1775570676
    var43 = 626 ^ arg39 & -1316538948 ^ 1072713998
    var44 = 2120782260 & arg40
    var45 = (var42 - (991 ^ var43)) + var44
    var46 = var41 & arg40 + var41
    var47 = (var42 | arg39) ^ -1104607224
    if var45 < var44:
        var48 = var47 ^ (var46 ^ 1306657941 ^ var45)
    else:
        var48 = arg40 | arg40 - var43 - var43
    var49 = ((arg40 ^ var46) | var45) & arg39
    var50 = arg39 ^ var46 - arg40 ^ -628
    if var49 < var49:
        var51 = var46 - var43
    else:
        var51 = (var45 & arg40 - var43) ^ var41
    var52 = (arg39 | (var47 | var43)) ^ var49
    var53 = -214 - var52 - var50
    var54 = arg39 & var43
    if var41 < var42:
        var55 = 759694679 | ((-1376511922 | arg39) - var42)
    else:
        var55 = var42 + (var43 + var41 | var41)
    var56 = var52 - var47
    var57 = arg39 - var49
    var58 = (var54 & var43 - var56) ^ var57
    result = (var43 + (arg40 | var57)) & var43
    return result
class class5(object):
    def func6(self, arg34, arg35):
        result = -691378692 - arg35 | 0 + 533071199 | -2041605770 & arg35 - arg34
        return result
def func3(arg5, arg6):
    closure = [0]
    def func4(acc, rest):
        var7 = 6 | acc
        closure[0] += var7
        if acc == 0:
            return var7
        else:
            result = func4(acc - 1, var7)
            return result
    result = func4(10, 0)
    return result
def func8(arg60, arg61):
    closure = [0]
    def func9(acc, rest):
        var62 = closure[0] | 0
        closure[0] += var62
        if acc == 0:
            return var62
        else:
            result = func9(acc - 1, var62)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var8 = func3(arg4, arg1)
        var9 = arg1 | var8
        if arg2 < var8:
            var10 = -959 | -709 | (arg4 ^ -858)
        else:
            var10 = arg1 ^ arg3 - 485 | var8
        var11 = arg3 | 319789473
        var12 = -1289293691 - -1213173129 + 779 + arg2
        var13 = (var12 | (264 ^ var8)) + var11
        var14 = (var9 + arg4) + arg1 | arg1
        var15 = var12 ^ 330
        var16 = (arg1 + var15 ^ 723) - var11
        var17 = arg2 & var8 | var12 - 583928357
        if var8 < var8:
            var18 = ((var16 & var8) | var16) + var11
        else:
            var18 = var11 + (-2022007338 - var11) ^ arg1
        var19 = (711 + var9 ^ var14) - var9
        var20 = (var17 - 390679912) - -61731290 - var8
        var21 = var11 + var13
        var22 = var21 & arg1
        var23 = var20 ^ var11
        var24 = arg1 - ((var14 ^ var21) - var21)
        var25 = var14 & var8 - var16 & var24
        var26 = arg1 ^ var9 + var14 - var9
        var27 = var24 + ((var13 + -105392351) ^ var21)
        var28 = var24 + (arg2 - (var22 + var23))
        var29 = var24 - (var9 ^ var28 & var24)
        var30 = (var8 | (var24 - var27)) | var16
        var31 = var29 + -72887192
        var32 = 251140082 | var30
        result = var32 - (var11 & var25 - var21)
        return result
    var33 = func2(arg2, arg1)
    var36 = class5()
    for var37 in range(50):
        var38 = var36.func6
        var38(var33, arg1)
    var59 = func7(arg1, arg2)
    var63 = func8(var59, var33)
    var64 = 1805659187 + var33
    var65 = (788 & var63) & (-1099390222 + var63) | arg1
    var66 = (var65 | arg1 & arg2) ^ var65 - -1775292997
    var67 = var59 ^ var65
    var68 = var64 | 575
    result = arg2 ^ var66 | 728 + var33
    return result
def func7(arg39, arg40):
    var41 = ((arg39 | -651395050) + -701) ^ arg39
    var42 = arg40 | var41 | -1322951250 ^ 1775570676
    var43 = 626 ^ arg39 & -1316538948 ^ 1072713998
    var44 = 2120782260 & arg40
    var45 = (var42 - (991 ^ var43)) + var44
    var46 = var41 & arg40 + var41
    var47 = (var42 | arg39) ^ -1104607224
    if var45 < var44:
        var48 = var47 ^ (var46 ^ 1306657941 ^ var45)
    else:
        var48 = arg40 | arg40 - var43 - var43
    var49 = ((arg40 ^ var46) | var45) & arg39
    var50 = arg39 ^ var46 - arg40 ^ -628
    if var49 < var49:
        var51 = var46 - var43
    else:
        var51 = (var45 & arg40 - var43) ^ var41
    var52 = (arg39 | (var47 | var43)) ^ var49
    var53 = -214 - var52 - var50
    var54 = arg39 & var43
    if var41 < var42:
        var55 = 759694679 | ((-1376511922 | arg39) - var42)
    else:
        var55 = var42 + (var43 + var41 | var41)
    var56 = var52 - var47
    var57 = arg39 - var49
    var58 = (var54 & var43 - var56) ^ var57
    result = (var43 + (arg40 | var57)) & var43
    return result
class class5(object):
    def func6(self, arg34, arg35):
        result = -691378692 - arg35 | 0 + 533071199 | -2041605770 & arg35 - arg34
        return result
def func3(arg5, arg6):
    closure = [0]
    def func4(acc, rest):
        var7 = 6 | acc
        closure[0] += var7
        if acc == 0:
            return var7
        else:
            result = func4(acc - 1, var7)
            return result
    result = func4(10, 0)
    return result
def func8(arg60, arg61):
    closure = [0]
    def func9(acc, rest):
        var62 = closure[0] | 0
        closure[0] += var62
        if acc == 0:
            return var62
        else:
            result = func9(acc - 1, var62)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
